{"version":3,"file":"component---src-pages-index-tsx-12365048fbd2afb89650.js","mappings":"uLAYe,SAASA,EAAT,GAMJ,IAAD,IALRC,MAAAA,OAKQ,MALA,KAKA,MAJRC,YAAAA,OAIQ,MAJM,KAIN,MAHRC,MAAAA,OAGQ,MAHA,KAGA,MAFRC,QAAAA,OAEQ,aADRC,SAAAA,OACQ,MADG,KACH,EAGR,GAFiBC,EAAAA,EAAAA,gBAAeC,GAAxBC,KAEiGC,aAAjGC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,mBAAoBC,EAAzD,EAAyDA,QAASC,EAAlE,EAAkEA,aAE5DC,GAFN,EAAgFC,gBAEpE,CACVf,MAAOA,GAASS,EAChBR,YAAaA,GAAeU,EAC5BT,MAAM,GAAIU,GAAUV,GAASW,GAC7BG,IAAI,GAAIJ,EAAUR,IAGpB,OACEa,EAAAA,cAACC,EAAAA,EAAD,CAAQlB,MAAOc,EAAId,MAAOU,cAAeA,GACvCO,EAAAA,cAAAA,OAAAA,CAAME,KAAK,cAAcC,QAASN,EAAIb,cACtCgB,EAAAA,cAAAA,OAAAA,CAAME,KAAK,QAAQC,QAASN,EAAIZ,QAE/BY,EAAIE,KAAOC,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,SAASD,QAASN,EAAIE,OAE/Cb,EAAiB,KAASc,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,UAAUD,QAAQ,YAE5DN,EAAId,OAASiB,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,WAAWD,QAASN,EAAId,QAEpDc,EAAIb,aAAegB,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,iBAAiBD,QAASN,EAAIb,cAEhEa,EAAIZ,OAASe,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,WAAWD,QAASN,EAAIZ,QAErDe,EAAAA,cAAAA,OAAAA,CAAME,KAAK,eAAeC,QAAQ,wBAEjCN,EAAId,OAASiB,EAAAA,cAAAA,OAAAA,CAAME,KAAK,gBAAgBC,QAASN,EAAId,QAErDc,EAAIb,aAAegB,EAAAA,cAAAA,OAAAA,CAAME,KAAK,sBAAsBC,QAASN,EAAIb,cAEjEa,EAAIZ,OAASe,EAAAA,cAAAA,OAAAA,CAAME,KAAK,gBAAgBC,QAASN,EAAIZ,QAG3D,CAED,IAAMI,EAAK,Y,gHCnDI,SAASgB,EAAT,GAA+C,IACtDC,EADqD,EAAzBC,KAAQC,OACrBC,MAAMC,KAAI,SAACC,GAAD,OAAeA,EAAKC,IAArC,IAA2CC,QAAO,SAACC,GAAD,YAAwBC,IAATD,CAAjE,IAEd,OACEd,EAAAA,cAACgB,EAAAA,EAAD,KACEhB,EAAAA,cAAClB,EAAAA,EAAD,CAAKC,MAAM,aAEXiB,EAAAA,cAAAA,MAAAA,CAAKiB,UAAU,oBACbjB,EAAAA,cAAAA,MAAAA,CAAKiB,UAAU,0CACbjB,EAAAA,cAAAA,OAAAA,CAAMiB,UAAU,YAAhB,MACAjB,EAAAA,cAAAA,KAAAA,CAAIiB,UAAU,kFAAd,cACAjB,EAAAA,cAAAA,KAAAA,CAAIiB,UAAU,qFAAd,qHAGFjB,EAAAA,cAAAA,MAAAA,CAAKiB,UAAU,iCACZX,EAAMI,KAAI,SAACI,GAAD,OACTd,EAAAA,cAACkB,EAAAA,KAAD,CAAMC,IAAKL,EAAKM,GAAIC,GAAE,IAAMP,EAAKQ,YAAYC,KAAQN,UAAU,mBAC7DjB,EAAAA,cAAAA,KAAAA,CAAIiB,UAAU,iGAAiGH,EAAKQ,YAAYvC,OAChIiB,EAAAA,cAAAA,UAAAA,CAASiB,UAAU,sGAChBH,EAAKU,SAJX,MAYV,C","sources":["webpack://my-gatsby-site/./src/components/seo.tsx","webpack://my-gatsby-site/./src/pages/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\ntype Props = {\n  title?: string | null\n  description?: string | null\n  image?: string | null\n  article?: boolean\n  pathname?: string | null\n}\n\nexport default function SEO({\n  title = null,\n  description = null,\n  image = null,\n  article = false,\n  pathname = null,\n}: Props) {\n  const { site } = useStaticQuery(query)\n\n  const { defaultTitle, titleTemplate, defaultDescription, siteUrl, defaultImage, twitterUsername } = site.siteMetadata\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  }\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && <meta property=\"og:description\" content={seo.description} />}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && <meta name=\"twitter:description\" content={seo.description} />}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  )\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout/main'\nimport SEO from '../components/seo'\n\nexport default function NotesPage({ data: { allMdx } }: any) {\n  const posts = allMdx.edges.map((edge: any) => edge.node).filter((post: any) => post !== undefined)\n\n  return (\n    <Layout>\n      <SEO title=\"·É¨·Éî·É†·Éò·Éö·Éî·Éë·Éò\" />\n\n      <div className=\"max-w-3xl m-auto\">\n        <div className=\"flex flex-col align-center text-center\">\n          <span className=\"text-9xl\">üìú</span>\n          <h2 className=\" mt-6 text-3xl transition-colors IliaDuospace text-gray-600 dark:text-gray-200\">·É©·Éê·Éú·Éê·É¨·Éî·É†·Éî·Éë·Éò</h2>\n          <h6 className=\" mt-4 max-w-md mx-auto text-md transition-colors text-gray-400 dark:text-gray-400\">·É©·Éê·Éú·Éê·É¨·Éî·É†·Éî·Éë·Éò, ·É¨·Éî·É†·Éò·Éö·Éî·Éë·Éò ·Éì·Éê ·Éî·É°·Éî·Éî·Éë·Éò ·É°·ÉÆ·Éï·Éê·Éì·Éê·É°·ÉÆ·Éï·Éê ·Éó·Éî·Éõ·Éê·Éñ·Éî, ·É´·Éò·É†·Éò·Éó·Éê·Éì·Éê·Éì ·É§·Éù·É¢·Éù·Éí·É†·Éê·É§·Éò·Éê·Éñ·Éî, ·É¨·Éò·Éí·Éú·Éî·Éë·Éñ·Éî ·Éì·Éê ·É°·ÉÆ·Éï·Éê·Éì·Éê·É°·ÉÆ·Éï·Éê side-·Éû·É†·Éù·Éî·É•·É¢·Éî·Éë·Éñ·Éî</h6>\n        </div>\n\n        <div className=\"mt-12 flex flex-col space-y-8\">\n          {posts.map((post: any) => (\n            <Link key={post.id} to={`/${post.frontmatter.slug}`} className=\"space-y-2 group\">\n              <h3 className=\"text-xl IliaDuospace font-semibold group-hover:underline transition-colors dark:text-gray-300\">{post.frontmatter.title}</h3>\n              <article className=\"iAWriterDuospace max-w-none text-gray-500 group-hover:text-gray-700 dark:group-hover:text-gray-400\">\n                {post.excerpt}\n              </article>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      filter: { frontmatter: { published: { ne: false } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          id\n          fields {\n            title\n            slug\n            date\n          }\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            banner {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            slug\n            keywords\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SEO","title","description","image","article","pathname","useStaticQuery","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","seo","twitterUsername","url","React","Helmet","name","content","property","NotesPage","posts","data","allMdx","edges","map","edge","node","filter","post","undefined","Layout","className","Link","key","id","to","frontmatter","slug","excerpt"],"sourceRoot":""}