{"version":3,"file":"component---src-pages-draft-tsx-8181870ad46d354d1b55.js","mappings":"uLAYe,SAASA,EAAT,GAMJ,IAAD,IALRC,MAAAA,OAKQ,MALA,KAKA,MAJRC,YAAAA,OAIQ,MAJM,KAIN,MAHRC,MAAAA,OAGQ,MAHA,KAGA,MAFRC,QAAAA,OAEQ,aADRC,SAAAA,OACQ,MADG,KACH,EAGR,GAFiBC,EAAAA,EAAAA,gBAAeC,GAAxBC,KAEiGC,aAAjGC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,mBAAoBC,EAAzD,EAAyDA,QAASC,EAAlE,EAAkEA,aAE5DC,GAFN,EAAgFC,gBAEpE,CACVf,MAAOA,GAASS,EAChBR,YAAaA,GAAeU,EAC5BT,MAAM,GAAIU,GAAUV,GAASW,GAC7BG,IAAI,GAAIJ,EAAUR,IAGpB,OACEa,EAAAA,cAACC,EAAAA,EAAD,CAAQlB,MAAOc,EAAId,MAAOU,cAAeA,GACvCO,EAAAA,cAAAA,OAAAA,CAAME,KAAK,cAAcC,QAASN,EAAIb,cACtCgB,EAAAA,cAAAA,OAAAA,CAAME,KAAK,QAAQC,QAASN,EAAIZ,QAE/BY,EAAIE,KAAOC,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,SAASD,QAASN,EAAIE,OAE/Cb,EAAiB,KAASc,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,UAAUD,QAAQ,YAE5DN,EAAId,OAASiB,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,WAAWD,QAASN,EAAId,QAEpDc,EAAIb,aAAegB,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,iBAAiBD,QAASN,EAAIb,cAEhEa,EAAIZ,OAASe,EAAAA,cAAAA,OAAAA,CAAMI,SAAS,WAAWD,QAASN,EAAIZ,QAErDe,EAAAA,cAAAA,OAAAA,CAAME,KAAK,eAAeC,QAAQ,wBAEjCN,EAAId,OAASiB,EAAAA,cAAAA,OAAAA,CAAME,KAAK,gBAAgBC,QAASN,EAAId,QAErDc,EAAIb,aAAegB,EAAAA,cAAAA,OAAAA,CAAME,KAAK,sBAAsBC,QAASN,EAAIb,cAEjEa,EAAIZ,OAASe,EAAAA,cAAAA,OAAAA,CAAME,KAAK,gBAAgBC,QAASN,EAAIZ,QAK5D,KAAMI,EAAK,Y,qGCpDI,SAASgB,EAAKC,GAC3B,IAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACzB,EAA0BR,EAAAA,SAAe,IAAlCjB,EAAP,KAAc0B,EAAd,KAEMC,EAAW,UAAS,IAAIC,gBAAgBL,EAAMM,SAASC,QAAQC,IAAI,OAAS,aA0ClF,OAxCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAASC,aAAaC,QAAQR,GAEhCM,GACFP,EAASO,GAGX,IAAMG,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,6DACbH,EAAOI,OAAM,EACbH,SAASI,KAAKC,YAAYN,GAE1BA,EAAOO,OAAS,WAEdnB,EAAUoB,QAAU,IAAIC,UAAU,CAChCC,QAAST,SAASU,eAAe,WACjCC,cAAc,EACdC,WAAW,EACXC,SAAU,CACRC,SAAS,EACTxB,SAAAA,EACAyB,MAAO,KAETC,YAAa,eACbC,YAAY,EACZC,mBAAmB,EACnBC,UAAW,CAAC,OAAQ,SACpBC,OAAQ,CAAC,QAAS,QAAS,UAC3BC,QAAS,EACTC,SAAS,EACTC,aAAa,EACbC,UAAW,CACTC,UAAW,YACXC,SAAU,YACVC,oBAAqB,oBAtB3B,CAZO,GAsCN,CAACrC,IAGFV,EAAAA,cAACgD,EAAAA,EAAD,KACEhD,EAAAA,cAAClB,EAAAA,EAAD,CAAKC,MAAO,UAEZiB,EAAAA,cAAAA,MAAAA,CAAKiD,UAAU,yBACbjD,EAAAA,cAAAA,QAAAA,CACEkD,KAAK,OACLd,YAAY,aACZe,aAAcpE,EACdqE,SAAU,SAACC,GACT5C,EAAS4C,EAAEC,OAAOC,OAClBtC,aAAauC,QAAQ9C,EAAU2C,EAAEC,OAAOC,MAN5C,EAQEN,UAAU,mJAGZjD,EAAAA,cAAAA,MAAAA,CAAKiD,UAAU,4RACbjD,EAAAA,cAAAA,WAAAA,CAAUyD,GAAG,aAGfzD,EAAAA,cAAAA,MAAAA,CAAKiD,UAAU,SACbjD,EAAAA,cAAAA,MAAAA,CAAKiD,UAAU,6EAKxB,C","sources":["webpack://my-gatsby-site/./src/components/seo.tsx","webpack://my-gatsby-site/./src/pages/draft.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\ntype Props = {\n  title?: string | null\n  description?: string | null\n  image?: string | null\n  article?: boolean\n  pathname?: string | null\n}\n\nexport default function SEO({\n  title = null,\n  description = null,\n  image = null,\n  article = false,\n  pathname = null,\n}: Props) {\n  const { site } = useStaticQuery(query)\n\n  const { defaultTitle, titleTemplate, defaultDescription, siteUrl, defaultImage, twitterUsername } = site.siteMetadata\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  }\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && <meta property=\"og:description\" content={seo.description} />}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && <meta name=\"twitter:description\" content={seo.description} />}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  )\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n      }\n    }\n  }\n`\n","import React, { useEffect, useRef } from 'react';\nimport Layout from '../components/layout/main';\nimport SEO from '../components/seo';\n\nexport default function Post(props: any) {\n  const simplemde = useRef(null)\n  const [title, setTitle] = React.useState('')\n\n  const uniqueId = `draft_${new URLSearchParams(props.location.search).get('id') || 'sample-id'}`\n\n  useEffect(() => {\n    const _title = localStorage.getItem(uniqueId)\n\n    if (_title) {\n      setTitle(_title)\n    }\n    \n    const script = document.createElement('script');\n    script.src = \"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\";\n    script.async=true;\n    document.body.appendChild(script);\n    \n    script.onload = () => {\n      // @ts-ignore\n      simplemde.current = new SimpleMDE({\n        element: document.getElementById('content'),\n        spellChecker: false,\n        autofocus: true,\n        autosave: {\n          enabled: true,\n          uniqueId,\n          delay: 1000,\n        },\n        placeholder: 'Type here...',\n        promptURLs: true,\n        styleSelectedText: false,\n        showIcons: ['code', 'table'],\n        status: [\"lines\", \"words\", \"cursor\"],\n        tabSize: 4,\n        toolbar: false,\n        toolbarTips: false,\n        shortcuts: {\n          drawImage: 'Cmd-Alt-M',\n          drawLink: 'Cmd-Alt-K',\n          toggleUnorderedList: 'Cmd-Alt-Shift-L',\n        },\n      })\n    };\n  }, [uniqueId])\n\n  return (\n    <Layout>\n      <SEO title={'Draft'} />\n\n      <div className=\"max-w-3xl m-auto mt-8\">\n        <input\n          type=\"text\"\n          placeholder=\"სათაური...\"\n          defaultValue={title}\n          onChange={(e) => {\n            setTitle(e.target.value)\n            localStorage.setItem(uniqueId, e.target.value)\n          }}\n          className=\"text-3xl max-w-lg mx-auto w-full block outline-none text-center font-semibold IliaDuospace transition-colors dark:text-gray-200 bg-transparent\"\n        ></input>\n\n        <div className=\"mt-16 mb-20 iAWriterDuospace w-full min-h-[500px] outline-none prose max-w-none prose-lg break-words text-gray-500 transition-colors dark:text-gray-300 dark:prose-a:text-gray-200 dark:prose-strong:text-gray-200 dark:prose-blockquote:text-gray-200 dark:prose-headings:text-gray-200\">\n          <textarea id=\"content\"></textarea>\n        </div>\n\n        <div className=\"mb-20\">\n          <div className=\"w-full border-t border-gray-100 transition-colors dark:border-gray-600\"></div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n"],"names":["SEO","title","description","image","article","pathname","useStaticQuery","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","seo","twitterUsername","url","React","Helmet","name","content","property","Post","props","simplemde","useRef","setTitle","uniqueId","URLSearchParams","location","search","get","useEffect","_title","localStorage","getItem","script","document","createElement","src","async","body","appendChild","onload","current","SimpleMDE","element","getElementById","spellChecker","autofocus","autosave","enabled","delay","placeholder","promptURLs","styleSelectedText","showIcons","status","tabSize","toolbar","toolbarTips","shortcuts","drawImage","drawLink","toggleUnorderedList","Layout","className","type","defaultValue","onChange","e","target","value","setItem","id"],"sourceRoot":""}